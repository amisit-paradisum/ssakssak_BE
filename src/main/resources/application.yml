spring:
  security:
    oauth2:
      client:
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id
        registration:
          google:
            client-id: ${OAUTH_CLIENT_ID:oauth client id}
            client-secret: ${OAUTH_CLIENT_SECRET:oauth client secret}
            redirect-uri: http://${DB_HOST:localhost}:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Google
            scope:
              - profile
              - email
  application:
    name: ssakssakmeal
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:5432/ssakssakmeal
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:node}
    password: ${DB_PASSWORD:1234}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
jwt:
  secret: ${JWT_SECRET:yoursecretkeyhereeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee}
